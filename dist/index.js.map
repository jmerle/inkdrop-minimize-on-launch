{"version":3,"sources":["../src/index.js"],"names":["listener","PID_KEY","ALWAYS_MINIMIZE_KEY","config","alwaysMinimize","title","description","type","default","activate","inkdrop","isMainWindow","lastProcessId","get","currentProcessId","remote","process","pid","set","minimizeFlag","argv","includes","onAppReady","window","minimize","deactivate","dispose"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAIA,QAAQ,GAAG,IAAf;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,mBAAmB,GAAG,mCAA5B;AAEO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAE,2BADO;AAEdC,IAAAA,WAAW,EACT,oFAHY;AAIdC,IAAAA,IAAI,EAAE,SAJQ;AAKdC,IAAAA,OAAO,EAAE;AALK;AADI,CAAf;;;AAUA,SAASC,QAAT,GAAoB;AACzB,MAAI,CAACC,OAAO,CAACC,YAAb,EAA2B;AACzB;AACD;;AAED,QAAMC,aAAa,GAAGF,OAAO,CAACP,MAAR,CAAeU,GAAf,CAAmBZ,OAAnB,KAA+B,CAAC,CAAtD;AACA,QAAMa,gBAAgB,GAAGC,iBAAOC,OAAP,CAAeC,GAAxC;AACAP,EAAAA,OAAO,CAACP,MAAR,CAAee,GAAf,CAAmBjB,OAAnB,EAA4Ba,gBAA5B;AAEA,QAAMV,cAAc,GAAGM,OAAO,CAACP,MAAR,CAAeU,GAAf,CAAmBX,mBAAnB,CAAvB;;AACA,QAAMiB,YAAY,GAAGJ,iBAAOC,OAAP,CAAeI,IAAf,CAAoBC,QAApB,CAA6B,YAA7B,CAArB;;AAEA,MAAI,CAACjB,cAAD,IAAmB,CAACe,YAAxB,EAAsC;AACpC;AACD,GAdwB,CAgBzB;AACA;AACA;AACA;;;AACA,MAAIP,aAAa,KAAKE,gBAAtB,EAAwC;AACtC;AACD,GAtBwB,CAwBzB;AACA;;;AACAd,EAAAA,QAAQ,GAAGU,OAAO,CAACY,UAAR,CAAmB,MAAM;AAClCZ,IAAAA,OAAO,CAACa,MAAR,CAAeC,QAAf;AACD,GAFU,CAAX;AAGD;;AAEM,SAASC,UAAT,GAAsB;AAC3B,MAAIzB,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,IAAAA,QAAQ,CAAC0B,OAAT;AACA1B,IAAAA,QAAQ,GAAG,IAAX;AACD;AACF","sourcesContent":["import { remote } from 'electron';\n\nlet listener = null;\n\nconst PID_KEY = 'minimize-on-launch.pid';\nconst ALWAYS_MINIMIZE_KEY = 'minimize-on-launch.alwaysMinimize';\n\nexport const config = {\n  alwaysMinimize: {\n    title: 'Always minimize on launch',\n    description:\n      'By default Inkdrop is only minimized on launch if the --minimize flag is provided.',\n    type: 'boolean',\n    default: false,\n  },\n};\n\nexport function activate() {\n  if (!inkdrop.isMainWindow) {\n    return;\n  }\n\n  const lastProcessId = inkdrop.config.get(PID_KEY) || -1;\n  const currentProcessId = remote.process.pid;\n  inkdrop.config.set(PID_KEY, currentProcessId);\n\n  const alwaysMinimize = inkdrop.config.get(ALWAYS_MINIMIZE_KEY);\n  const minimizeFlag = remote.process.argv.includes('--minimize');\n\n  if (!alwaysMinimize && !minimizeFlag) {\n    return;\n  }\n\n  // If the process id is the same as the last saved id, we can assume the\n  // window was simply reloaded. While there is a chance for the pid to be the\n  // same during restarts, there is no better way to differentiate between an\n  // app restart and a window reload.\n  if (lastProcessId === currentProcessId) {\n    return;\n  }\n\n  // The window is not always restored to the correct size if it is minimized\n  // before the app is ready.\n  listener = inkdrop.onAppReady(() => {\n    inkdrop.window.minimize();\n  });\n}\n\nexport function deactivate() {\n  if (listener !== null) {\n    listener.dispose();\n    listener = null;\n  }\n}\n"],"file":"index.js"}